plugins {
  id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

mainClassName = "com.github.glo2003.APIServer"
applicationName = "glo2003"
sourceCompatibility = 1.8
version = '0.0.0'

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

sonarqube {
    properties {
        property 'sonar.glo2003', 'Example of SonarQube Scanner for Gradle Usage'
    }
}

jacoco {
    toolVersion = "0.8.0"
    reportsDir = file("$buildDir/JacocoTest")
}


repositories {
    mavenCentral()
    maven {
        url 'http://repo.jenkins-ci.org/public/'
    }
}

dependencies {
    compile 'com.sparkjava:spark-core:2.3'

    // Javaslang http://javaslang.com/
    compile 'com.javaslang:javaslang:2.0.0-RC1'

    // Github client (if this one doesn't satisfy you)
    // http://github-api.kohsuke.org/
    compile 'org.kohsuke:github-api:1.71'

    // jsonObject
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    // mongodb
    compile 'org.mongodb:mongodb-driver:3.5.0'

    // add logger
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.18'

    // cucumber
    testCompile 'io.cucumber:cucumber-java:2.4.0'
    testCompile 'io.cucumber:cucumber-junit:2.4.0'

    // mail
    compile 'com.sun.mail:android-mail:1.5.5'
    compile 'com.sun.mail:android-activation:1.5.5'

    // http://github.jcabi.com/
    // compile 'com.jcabi:jcabi-github:0.23'
    // compile 'com.google.guava:guava:18.0'

    // Apache Commons
    // compile 'org.apache.commons:commons-lang3:3.4'
    // compile 'org.apache.commons:commons-io:1.3.2'

    // Google Guice or Squares Dagger
    // compile 'com.google.inject:guice:4.0'
    // compile 'com.squareup.dagger:dagger:1.2.2'
    // compile 'com.squareup.dagger:dagger-compiler:1.2.2'

    // Http clients
    // http://square.github.io/okhttp/
    // compile 'com.google.http-client:google-http-client:1.21.0'
    // compile 'com.google.http-client:google-http-client-gson:1.21.0'
    // compile 'org.apache.httpcomponents:httpcomponents-core:4.4.4'
    // compile 'org.apache.httpcomponents:httpcomponents-client:4.5.1'

    // Google's Gson in case you don't like jackson
    // compile 'com.google.code.gson:gson:2.4'

    // Lombok
    // compile 'org.projectlombok:lombok:1.16.6'

    // Joda - Time
    // compile 'joda-time:joda-time:2.9.1'

    // https://github.com/immutables/immutables
    // compile 'org.immutables:immutables:2.1.0'



    testCompile 'junit:junit:4.+'
    // Better asserts: AssertJ or Truth
    // http://google.github.io/truth
    testCompile 'com.google.truth:truth:0.27'
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.github.glo2003.cucumber', 'src/test/resources']
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

jar {
  manifest {
	attributes(
		'Class-Path': configurations.compile.collect{it.toURI().toString()}.join(' '),
		'Main-Class': 'com.github.glo2003.APIServer')
  }
}


task stage(dependsOn: ['clean', 'installApp']) {
}
build.mustRunAfter clean

checkstyle {

    project.ext.checkstyleVersion = '8.9'
    project.ext.sevntuChecksVersion = '1.29.0'


    ignoreFailures = true
    configFile = file("${project.rootDir}/checkstyle.xml")

    //sourceSets = [sourceSets.main]
    //showViolations = true
    //reportsDir = file("$project.buildDir/checkstyleReports")
    //configProperties = ['baseDir': "$project.projectDir"]

    //https://discuss.gradle.org/t/some-checkstyle-rules-dont-work-in-gradle/16102/4
    checkstyleMain {
        source = sourceSets.main.allSource
    }

    configurations {
        checkstyle
    }

    dependencies{
        assert project.hasProperty("checkstyleVersion")

        checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
        checkstyle "com.github.sevntu-checkstyle:sevntu-checks:${sevntuChecksVersion}"
    }
}